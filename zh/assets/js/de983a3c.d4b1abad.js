"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[97479],{3905:(e,r,t)=>{t.d(r,{Zo:()=>v,kt:()=>d});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var a=i.createContext({}),c=function(e){var r=i.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},v=function(e){var r=c(e.components);return i.createElement(a.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},u=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,s=e.originalType,a=e.parentName,v=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=n,m=u["".concat(a,".").concat(d)]||u[d]||p[d]||s;return t?i.createElement(m,o(o({ref:r},v),{},{components:t})):i.createElement(m,o({ref:r},v))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var s=t.length,o=new Array(s);o[0]=u;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<s;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},89829:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=t(87462),n=(t(67294),t(3905));const s={},o="walrus servicerevision list",l={unversionedId:"cli/servicerevision/walrus_servicerevision_list",id:"version-v0.3/cli/servicerevision/walrus_servicerevision_list",title:"walrus servicerevision list",description:"Get service revisions.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/version-v0.3/cli/servicerevision/walrus_servicerevision_list.md",sourceDirName:"cli/servicerevision",slug:"/cli/servicerevision/walrus_servicerevision_list",permalink:"/docs/zh/v0.3/cli/servicerevision/walrus_servicerevision_list",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/versioned_docs/version-v0.3/cli/servicerevision/walrus_servicerevision_list.md",tags:[],version:"v0.3",frontMatter:{},sidebar:"cli",previous:{title:"walrus servicerevision get",permalink:"/docs/zh/v0.3/cli/servicerevision/walrus_servicerevision_get"},next:{title:"walrus servicerevision log",permalink:"/docs/zh/v0.3/cli/servicerevision/walrus_servicerevision_log"}},a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],v={toc:c};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,i.Z)({},v,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"walrus-servicerevision-list"},"walrus servicerevision list"),(0,n.kt)("p",null,"Get service revisions."),(0,n.kt)("h2",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Get service revisions that belongs to an environment of a project."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"walrus servicerevision list <service> [flags]\n")),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --extract strings   \n      --page int           (default 1)\n      --per-page int       (default 100)\n      --query string      \n      --sort strings      \n")),(0,n.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'  -d, --debug           Enable debug log\n  -h, --help            Help for this command\n  -o, --output string   Output format [table, json, yaml] (default "table")\n  -v, --version         Version for CLI\n')),(0,n.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"walrus_servicerevision"},"walrus servicerevision"),"\t - Manage service revisions")))}p.isMDXComponent=!0}}]);