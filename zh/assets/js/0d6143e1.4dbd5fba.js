"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42524],{3905:(e,t,o)=>{o.d(t,{Zo:()=>i,kt:()=>f});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function c(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?c(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)o=c[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)o=c[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},i=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,i=a(e,["components","mdxType","originalType","parentName"]),d=p(o),f=r,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||c;return o?n.createElement(m,l(l({ref:t},i),{},{components:o})):n.createElement(m,l({ref:t},i))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=o.length,l=new Array(c);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var p=2;p<c;p++)l[p]=o[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},25707:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>p});var n=o(87462),r=(o(67294),o(3905));const c={},l="walrus connector apply-cost-tools",a={unversionedId:"cli/connector/walrus_connector_apply-cost-tools",id:"cli/connector/walrus_connector_apply-cost-tools",title:"walrus connector apply-cost-tools",description:"Apply cost tools for a connector.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/cli/connector/walrus_connector_apply-cost-tools.md",sourceDirName:"cli/connector",slug:"/cli/connector/walrus_connector_apply-cost-tools",permalink:"/docs/zh/cli/connector/walrus_connector_apply-cost-tools",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/docs/cli/connector/walrus_connector_apply-cost-tools.md",tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"walrus connector",permalink:"/docs/zh/cli/connector/walrus_connector"},next:{title:"walrus connector create",permalink:"/docs/zh/cli/connector/walrus_connector_create"}},s={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],i={toc:p};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"walrus-connector-apply-cost-tools"},"walrus connector apply-cost-tools"),(0,r.kt)("p",null,"Apply cost tools for a connector."),(0,r.kt)("h2",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Apply cost tools for a connector."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"walrus connector apply-cost-tools <connector> [flags]\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      --project string   \n")),(0,r.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -d, --debug           Enable debug log\n  -h, --help            Help for this command\n  -o, --output string   Output format [table, json, yaml] (default "table")\n  -v, --version         Version for CLI\n')),(0,r.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"walrus_connector"},"walrus connector"),"\t - Manage connectors")))}u.isMDXComponent=!0}}]);