"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16485],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var o=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=o.createContext({}),c=function(e){var r=o.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=c(e.components);return o.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},w=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),w=c(t),f=n,d=w["".concat(s,".").concat(f)]||w[f]||p[f]||l;return t?o.createElement(d,a(a({ref:r},u),{},{components:t})):o.createElement(d,a({ref:r},u))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var l=t.length,a=new Array(l);a[0]=w;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var c=2;c<l;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}w.displayName="MDXCreateElement"},16389:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var o=t(87462),n=(t(67294),t(3905));const l={},a="walrus workflow list",i={unversionedId:"cli/workflow/walrus_workflow_list",id:"cli/workflow/walrus_workflow_list",title:"walrus workflow list",description:"Get workflows.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/cli/workflow/walrus_workflow_list.md",sourceDirName:"cli/workflow",slug:"/cli/workflow/walrus_workflow_list",permalink:"/docs/zh/cli/workflow/walrus_workflow_list",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/docs/cli/workflow/walrus_workflow_list.md",tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"walrus workflow get",permalink:"/docs/zh/cli/workflow/walrus_workflow_get"},next:{title:"walrus workflow run",permalink:"/docs/zh/cli/workflow/walrus_workflow_run"}},s={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],u={toc:c};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"walrus-workflow-list"},"walrus workflow list"),(0,n.kt)("p",null,"Get workflows."),(0,n.kt)("h2",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Get workflows of a project."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"walrus workflow list [flags]\n")),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --extract strings   \n      --page int           (default 1)\n      --per-page int       (default 100)\n      --query string      \n      --sort strings      \n")),(0,n.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'  -d, --debug           Enable debug log\n  -h, --help            Help for this command\n  -o, --output string   Output format [table, json, yaml] (default "table")\n  -v, --version         Version for CLI\n')),(0,n.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"walrus_workflow"},"walrus workflow"),"\t - Manage workflows")))}p.isMDXComponent=!0}}]);