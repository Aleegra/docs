"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[35618],{3905:(e,r,n)=>{n.d(r,{Zo:()=>v,kt:()=>d});var t=n(67294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=t.createContext({}),c=function(e){var r=t.useContext(a),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},v=function(e){var r=c(e.components);return t.createElement(a.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,v=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,f=u["".concat(a,".").concat(d)]||u[d]||p[d]||o;return n?t.createElement(f,s(s({ref:r},v),{},{components:n})):t.createElement(f,s({ref:r},v))}));function d(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=u;var l={};for(var a in r)hasOwnProperty.call(r,a)&&(l[a]=r[a]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2169:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=n(87462),i=(n(67294),n(3905));const o={},s="walrus servicerevision log",l={unversionedId:"cli/servicerevision/walrus_servicerevision_log",id:"version-v0.3/cli/servicerevision/walrus_servicerevision_log",title:"walrus servicerevision log",description:"Log for a service revision.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/version-v0.3/cli/servicerevision/walrus_servicerevision_log.md",sourceDirName:"cli/servicerevision",slug:"/cli/servicerevision/walrus_servicerevision_log",permalink:"/docs/zh/v0.3/cli/servicerevision/walrus_servicerevision_log",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/versioned_docs/version-v0.3/cli/servicerevision/walrus_servicerevision_log.md",tags:[],version:"v0.3",frontMatter:{},sidebar:"cli",previous:{title:"walrus servicerevision list",permalink:"/docs/zh/v0.3/cli/servicerevision/walrus_servicerevision_list"},next:{title:"walrus setting",permalink:"/docs/zh/v0.3/cli/setting/walrus_setting"}},a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],v={toc:c};function p(e){let{components:r,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},v,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"walrus-servicerevision-log"},"walrus servicerevision log"),(0,i.kt)("p",null,"Log for a service revision."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Log for a service revision that belongs to an environment of a project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"walrus servicerevision log <service> <servicerevision> [flags]\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      --job-type string   \n")),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  -d, --debug           Enable debug log\n  -h, --help            Help for this command\n  -o, --output string   Output format [table, json, yaml] (default "table")\n  -v, --version         Version for CLI\n')),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"walrus_servicerevision"},"walrus servicerevision"),"\t - Manage service revisions")))}p.isMDXComponent=!0}}]);