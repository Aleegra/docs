"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[21198],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),c=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},w=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),w=c(r),f=n,d=w["".concat(u,".").concat(f)]||w[f]||p[f]||l;return r?o.createElement(d,i(i({ref:t},s),{},{components:r})):o.createElement(d,i({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=w;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:n,i[1]=a;for(var c=2;c<l;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}w.displayName="MDXCreateElement"},5752:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var o=r(87462),n=(r(67294),r(3905));const l={},i="walrus workflowexecution list",a={unversionedId:"cli/workflowexecution/walrus_workflowexecution_list",id:"cli/workflowexecution/walrus_workflowexecution_list",title:"walrus workflowexecution list",description:"Get workflow executions.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/cli/workflowexecution/walrus_workflowexecution_list.md",sourceDirName:"cli/workflowexecution",slug:"/cli/workflowexecution/walrus_workflowexecution_list",permalink:"/docs/zh/cli/workflowexecution/walrus_workflowexecution_list",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/docs/cli/workflowexecution/walrus_workflowexecution_list.md",tags:[],version:"current",frontMatter:{},sidebar:"cli",previous:{title:"walrus workflowexecution get",permalink:"/docs/zh/cli/workflowexecution/walrus_workflowexecution_get"},next:{title:"walrus workflowexecution rerun-request",permalink:"/docs/zh/cli/workflowexecution/walrus_workflowexecution_rerun-request"}},u={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],s={toc:c};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"walrus-workflowexecution-list"},"walrus workflowexecution list"),(0,n.kt)("p",null,"Get workflow executions."),(0,n.kt)("h2",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Get workflow executions that belongs to a project."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"walrus workflowexecution list <workflow> [flags]\n")),(0,n.kt)("h2",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"      --extract strings   \n      --id string         \n      --page int           (default 1)\n      --per-page int       (default 100)\n      --query string      \n      --sort strings      \n")),(0,n.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'  -d, --debug           Enable debug log\n  -h, --help            Help for this command\n  -o, --output string   Output format [table, json, yaml] (default "table")\n  -v, --version         Version for CLI\n')),(0,n.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"walrus_workflowexecution"},"walrus workflowexecution"),"\t - Manage workflow executions")))}p.isMDXComponent=!0}}]);