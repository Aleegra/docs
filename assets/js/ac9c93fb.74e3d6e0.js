"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[69223],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var o=n.createContext({}),a=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=a(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),v=a(r),d=p,m=v["".concat(o,".").concat(d)]||v[d]||u[d]||i;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function d(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var i=r.length,s=new Array(i);s[0]=v;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:p,s[1]=l;for(var a=2;a<i;a++)s[a]=r[a];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},20568:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var n=r(87462),p=(r(67294),r(3905));const i={},s="walrus perspective delete",l={unversionedId:"cli/perspective/walrus_perspective_delete",id:"version-v0.3/cli/perspective/walrus_perspective_delete",title:"walrus perspective delete",description:"Delete a perspective.",source:"@site/versioned_docs/version-v0.3/cli/perspective/walrus_perspective_delete.md",sourceDirName:"cli/perspective",slug:"/cli/perspective/walrus_perspective_delete",permalink:"/docs/v0.3/cli/perspective/walrus_perspective_delete",draft:!1,editUrl:"https://github.com/seal-io/docs/edit/main/versioned_docs/version-v0.3/cli/perspective/walrus_perspective_delete.md",tags:[],version:"v0.3",frontMatter:{},sidebar:"cli",previous:{title:"walrus perspective create",permalink:"/docs/v0.3/cli/perspective/walrus_perspective_create"},next:{title:"walrus perspective get",permalink:"/docs/v0.3/cli/perspective/walrus_perspective_get"}},o={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],c={toc:a};function u(e){let{components:t,...r}=e;return(0,p.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"walrus-perspective-delete"},"walrus perspective delete"),(0,p.kt)("p",null,"Delete a perspective."),(0,p.kt)("h2",{id:"synopsis"},"Synopsis"),(0,p.kt)("p",null,"Delete a perspective."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"walrus perspective delete <perspective> [flags]\n")),(0,p.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},'  -d, --debug           Enable debug log\n  -h, --help            Help for this command\n  -o, --output string   Output format [table, json, yaml] (default "table")\n  -v, --version         Version for CLI\n')),(0,p.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"walrus_perspective"},"walrus perspective"),"\t - Manage perspectives")))}u.isMDXComponent=!0}}]);